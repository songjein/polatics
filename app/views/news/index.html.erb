<style>
	* { font-family: 'Spoqa Han Sans', serif; }

	.title{
		font-weight: 1.2em;	
	}
	.datetime{
		color:rgb(170,170,170);
	}

	.news-container{
		margin-top: 5px;		
	}

	.newsname{
		color: rgb(150,150,150);
		font-weight: bold;	
	}

	.selected{
		background:yellow;
	}

	#title{
		color: black;	
		cursor:pointer;
	}

	#hot-topics{
		width: 500px;
	}

	#twitters{
		width: 500px;
		font-size: 0.9em;
		cursor: pointer;
	}
	.tweet-hilite{
		background: #faf4c0;	
	}

	.hot-topic{
		color: rgb(150,150,150);		
		cursor: pointer;
		white-space: nowrap;
	}

	#overlay{
		 position: absolute;
		 top: 0; left: 0;
		 background: rgba(0,0,0,0.5);
		 display: none;
	}

	#info {
		font-size: 1.3em;	
		color : #99E000;
		cursor: pointer;
	}
	#intro{
		cursor: pointer;
	}

	#about-service{
		font-size: 1.3em;
		color:white;	
		width: 600px;
		margin: auto;
		margin-top: 10%;
		background: rgba(0,0,0,0.3);
		padding: 1%;
	}
	
	#comatrix-graph{
		background: rgba(240,240,240,0.6)
	}

</style>

<!--<div class="jumbotron" style="background-image: url(<%= image_path 'bg.jpg' %>); background-size: 100% 100%;">-->
<div class="jumbotron">
	<center>
		<div class="container" >
			<%# ca = ['#EDD200', 'green', 'navy', 'purple'] %>
			<%# ca[rand(0..4)]%>
			<a href="/"><span id="title" style="font-weight:bold;font-size:3.5em;">Polatics</span></a>
			<br>
			<span style="font-size:1.2em;" ><strong>진보, 보수</strong> 신문기사에 대한 제목 검색이 가능합니다</span>
			<br>
			<% if HotTopic.last %>
				<span style="color:rgb(150,150,150)">- <span style="color:black"><%=time_ago_in_words(HotTopic.last.created_at)%></span> 전에 업데이트 됨 -</span>
			<% end %>
			<br>
			<a id="intro" >소개말</a>
			<i id="info" class="fa fa-leaf" aria-hidden="true"></i>

			<div style="margin-top: 30px"></div>

			<div class="form-inline">
				<div class="form-group" style="width:50%">
					<input id="search_form" type="text" class="form-control input-lg" style="width:100%" placeholder="검색어를 입력하세요" value="<%=@search_term%>">
				</div>
				<button class="btn btn-default btn-lg" id="search_submit"><i class="fa fa-search" aria-hidden="true"></i></button>
			</div>

			<div style="margin-top: 30px"></div>

			<div id="hot-topics">
				핫토픽:
				<% HotTopic.all.reverse[0..19].reverse.each do |h| %>
					<span class="hot-topic"><%= h.topic%></span>&nbsp;
				<% end %>
			</div>

		</div>
	</center>
</div>


<div class="container">

	<center>
		<div id="twitters">
			<span style="color:rgb(200,200,200)">클릭으로 멈출 수 있습니다:)</span>
			<br>
			<span id="tweet"></span>
		</div>
		<div style="margin-top: 15px"></div>
	</center>

	<center id="comatrix-graph-container">
		<h2>관계분석 결과</h2>
		<div id="comatrix-graph">
		</div>
		<div style="height: 20px"></div>
	</center>
	
	<div style="width:50%; float:left">
		<% if @lefts.length == 0 %>
			- 진보 신문의 검색 결과가 없습니다 -
		<% end %>
		<div id="infinite-scrolling" style="display:none">
			<% if @lefts.count < @rights.count %>
				<%= will_paginate @lefts %>
			<% else %>
				<%= will_paginate @rights %>
			<% end %>
		</div>
		<% @lefts.each do |news| %>	
			<div class="news-container">
				<span class="title"><%= link_to news.title.html_safe, news.news_url, target: "_blank" %></span>
				<span class="newsname">@<%= news.news_name%></span>
				<span class="datetime"><%=time_ago_in_words(news.news_time)%> 전</span>
				<br>
			</div>
		<% end %>
		<div id="extra-lefts">
		</div>
	</div>

	<div style="width:50%; float:left">
		<% if @rights.length == 0 %>
			- 보수 신문의 검색 결과가 없습니다 -
		<% end %>
		<% @rights.each do |news| %>	
			<div class="news-container">
				<span class="title"><%= link_to news.title.html_safe, news.news_url, target: "_blank" %></span>
				<span class="newsname">@<%= news.news_name%></span>
				<span class="datetime"><%=time_ago_in_words(news.news_time)%> 전</span>
				<br>
			</div>
		<% end %>
		<div id="extra-rights">
		</div>
	</div>

</div>
<script>
	var canAddExtra = true
	$(function(){
		if ($('#infinite-scrolling').size() > 0){
			$(window).on("scroll", function(){
				more_posts_url = $('.pagination a.next_page').attr('href') 
				if (canAddExtra && more_posts_url && $(window).scrollTop() > $(document).height() - $(window).height() - 60){
					canAddExtra = false;
					$.getScript(more_posts_url,function(data, textStatus, jqxhr){
						console.log(data)
						canAddExtra = true
					})	
				}
			})
		}
	})
</script>

<div id="overlay">
	<div id="about-service">
			<i style="color:#E1FF36"class="fa fa-balance-scale" aria-hidden="true"></i> <strong>Polatics란?</strong> <br>
			정치를 의미하는 <u>Politics</u>와 양극성을 의미하는 <u>Polarity</u>의 합성어 입니다.<br>
			좀 더 균형잡힌 시각으로 세상의 소식을 접하기 위해 만들었습니다.<br>
			서비스의 좌측에는 진보신문, 우측에는 보수신문기사를 배치하였으며<br>
			주제어에 대한 검색이 가능합니다 <span style="color:yellow">;D</span></br>
			<br>
			<div style="font-size: 0.7em;">
			- 더 다양한 신문사, 검색 방식 및 분석 결과를 추가할 예정입니다 <br>
			- 파이썬(핫토픽), 루비(크롤링), 루비온레일즈(웹서비스) 및 웹언어(html,css,jquery)로 개발하고 있습니다
			</div>
	</div>
</div>



<script>
	var isSetIntervalApplied = false;
	$(function(){
		// 나중에 하이라이트 펑션에 쓸 함수
		$("#").click(function(){
			search_term = $("#search_form").val()
			$(".title").each(function(index){
				$(this).html(
						$(this).html()
						.replace(search_term, "<span class='selected'>" + search_term +"</span>")
				)
			})
			return false;
		})				

		$('#search_submit').click(function(){
			window.location = '/news?search_term=' + $("#search_form").val();
			return false;
		})

		<%# search term highlight %>
		<%# search term highlight %>
		<% if @search_term %>
			search_term = $("#search_form").val()
			$(".title").each(function(index){
				$(this).html(
						$(this).html()
						.replace(search_term, "<span class='selected'>" + search_term +"</span>")
				)
			})
		<% end %>

		// 엔터 이벤트
		$('#search_form').keyup(function(e) {
			if (e.keyCode == 13) {
				window.location = '/news?search_term=' + $("#search_form").val();
			} 
		});

		$('.hot-topic').click(function(){
				window.location = '/news?search_term=' + $(this).html() 
		})


		// search nav item
		// search nav item
		$('#info, #intro').click(function(){
			$('#overlay').css('width', $(window).width())
							 .css('height', $(window).height())
							 .show()
		})
		
		$('#overlay').click(function(){
			 $(this).hide()
		})

		$('#about-service').click(function(){
			return false;	
		})


		// twitter 
		var isClickedTweet = false;
		$("#twitters").click(function(){
			isClickedTweet = isClickedTweet ? false : true;
			$(this).toggleClass("tweet-hilite");
		});
		var topic = $("#search_form").val();
		topic = topic ? topic : "ALLTOPIC";
		$.ajax('/get_twitter/' + topic, {
			success: function(data){
				var tweet_idx = 0;
				if (!isSetIntervalApplied){
					isSetIntervalApplied = true; // 여러번 등록 방지
					setInterval(function(){
						if (!isClickedTweet) {
							$("#tweet").html("<b>[<span style='color:red'>" + data[tweet_idx].topic + "</span>]</b> " + data[tweet_idx].text + "<br><b>-" + data[tweet_idx].name + "-</b>");
							tweet_idx++;
						}
					}, 3000)
				}
			}
		});
		// twitter end

		// comatrix
		$("#comatrix-graph-container").hide();
		var comatrix ;
		$.ajax('/get_comatrix', {
			success: function(data){
				comatrix = data;
				console.log("comatrix", comatrix);
				////////////////////////////////////////////////////////////////////////////////////////////
				// co matrix => graph
				////////////////////////////////////////////////////////////////////////////////////////////
				var w = 800;
				var h = 400;
				var linkDistance=130;

				var colors = d3.scale.category10();

				function makeDataset(topics){
					console.log(comatrix.edges);	
					console.log(comatrix.nodes);	
					// 토픽의 인덱스 찾기
					var topics_idx = []
					for (i = 0 ; i < topics.length; i ++){
						topic_idx = comatrix.nodes.findIndex(function(e){
							return e.name == topics[i];	
						});
						topics_idx.push(topic_idx);
					}
	
					// edges를 살펴서 source가 박근혜인걸 찾는다
					var tmp = {
						nodes: [],
						edges: []
					}
					// 내가 원하는 것만 그리기 위해선 인덱스 재할당 필요
					var nodes_idx = topics_idx.slice(); 
					for (i = 0 ; i < comatrix.edges.length; i++){
						//if (comatrix.edges[i].source == topic_idx){
						if (topics_idx.indexOf(comatrix.edges[i].source) > -1){
							// 일단 edges를 tmp에 저장(뒤에서 인덱스 재할당)
							tmp.edges.push(comatrix.edges[i]);
							// 인덱스 재할당을 위해 nodes_idx에 원래 인덱스 저장
							nodes_idx.push(comatrix.edges[i].target);
						} 
					}
					// nodes_idx가 정렬이 된다
					nodes_idx = nodes_idx.sort(function(a,b){return a-b});
					console.log("sorted nodes idx", nodes_idx);
					// 순서대로 0,1,2,...을 매핑해야 한다

					// 일단 이 순서대로 nodes를 채운다
					for (i = 0; i < nodes_idx.length; i ++){
						tmp.nodes.push({name: comatrix.nodes[nodes_idx[i]].name});
					}
					// 이 노드들은 순서대로 0,1,2,... 의 인덱스를 새로 할당 받는다
					console.log("nodes",tmp.nodes);

					// tmp.edges에 저장해 뒀던 인덱스를 0,1,2,... 부터 새로 할당한다
					for (i = 0 ; i < tmp.edges.length; i ++){
						var os = tmp.edges[i].source	
						var ot = tmp.edges[i].target
						tmp.edges[i].source = nodes_idx.findIndex(function(e){
							return e == os;	
						});
						tmp.edges[i].target= nodes_idx.findIndex(function(e){
							return e == ot;	
						});
					}
					console.log("nodes new edges", tmp.edges);

					console.log(tmp);
					return tmp;
				}

				var search_term = $("#search_form").val()

				var dataset;
				// 검색어 있을 때
				if (search_term){
					dataset = makeDataset([search_term]);
					$("#comatrix-graph-container").fadeIn(500);
				}
				// 검색어 없을 때
				else {
					/*
					var terms = []	
					$(".hot-topic").each(function(idx){
						terms.push($(".hot-topic").eq(idx).text());
					});	
					search_terms = terms.slice(0,3);
					*/
					search_term = {
						nodes: [], // {name: "abc"}
						edges: []  // {source: 0, target: 1}
					}
					dataset = makeDataset(search_term);
				}

				var svg = d3.select("#comatrix-graph").append("svg").attr({"width":w,"height":h});

				var force = d3.layout.force()
						.nodes(dataset.nodes)
						.links(dataset.edges)
						.size([w,h])
						.linkDistance([linkDistance])
						.charge([-500])
						.theta(0.1)
						.gravity(0.05)
						.start();

				var edges = svg.selectAll("line")
					.data(dataset.edges)
					.enter()
					.append("line")
					.attr("id",function(d,i) {return 'edge'+i})
					.attr('marker-end','url(#arrowhead)')
					.style("stroke","#ccc")
					.style("pointer-events", "none");
				
				var nodes = svg.selectAll("circle")
					.data(dataset.nodes)
					.enter()
					.append("circle")
					.attr({"r":15})
					.style("fill",function(d,i){return colors(i);})
					.call(force.drag)


				var nodelabels = svg.selectAll(".nodelabel") 
					 .data(dataset.nodes)
					 .enter()
					 .append("text")
					 .attr({"x":function(d){return d.x;},
									"y":function(d){return d.y;},
									"class":"nodelabel",
									"stroke":"black"})
					 .text(function(d){return d.name;});

				var edgepaths = svg.selectAll(".edgepath")
						.data(dataset.edges)
						.enter()
						.append('path')
						.attr({'d': function(d) {return 'M '+d.source.x+' '+d.source.y+' L '+ d.target.x +' '+d.target.y},
									 'class':'edgepath',
									 'fill-opacity':0,
									 'stroke-opacity':0,
									 'fill':'blue',
									 'stroke':'red',
									 'id':function(d,i) {return 'edgepath'+i}})
						.style("pointer-events", "none");

				var edgelabels = svg.selectAll(".edgelabel")
						.data(dataset.edges)
						.enter()
						.append('text')
						.style("pointer-events", "none")
						.attr({'class':'edgelabel',
									 'id':function(d,i){return 'edgelabel'+i},
									 'dx':80,
									 'dy':0,
									 'font-size':10,
									 'fill':'#aaa'});

				edgelabels.append('textPath')
						.attr('xlink:href',function(d,i) {return '#edgepath'+i})
						.style("pointer-events", "none")
						//.text(function(d,i){return 'label '+i});


				svg.append('defs').append('marker')
						.attr({'id':'arrowhead',
									 'viewBox':'-0 -5 10 10',
									 'refX':25,
									 'refY':0,
									 //'markerUnits':'strokeWidth',
									 'orient':'auto',
									 'markerWidth':10,
									 'markerHeight':10,
									 'xoverflow':'visible'})
						.append('svg:path')
								.attr('d', 'M 0,-5 L 10 ,0 L 0,5')
								.attr('fill', '#ccc')
								.attr('stroke','#ccc');
				 

				force.on("tick", function(){

						edges.attr({"x1": function(d){return d.source.x;},
												"y1": function(d){return d.source.y;},
												"x2": function(d){return d.target.x;},
												"y2": function(d){return d.target.y;}
						});

						nodes.attr({"cx":function(d){return d.x;},
												"cy":function(d){return d.y;}
						});

						nodelabels.attr("x", function(d) { return d.x; }) 
											.attr("y", function(d) { return d.y; });

						edgepaths.attr('d', function(d) { var path='M '+d.source.x+' '+d.source.y+' L '+ d.target.x +' '+d.target.y;
																							 //console.log(d)
																							 return path});       

						edgelabels.attr('transform',function(d,i){
								if (d.target.x<d.source.x){
										bbox = this.getBBox();
										rx = bbox.x+bbox.width/2;
										ry = bbox.y+bbox.height/2;
										return 'rotate(180 '+rx+' '+ry+')';
										}
								else {
										return 'rotate(0)';
										}
						});
				});
				////////////////////////////////////////////////////////////////////////////////////////////
			}	
		});

	
	})
</script>
